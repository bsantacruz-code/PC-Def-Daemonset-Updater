apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: twistlock-view
rules:
  - apiGroups: ["rbac.authorization.k8s.io"]
    resources: ["roles", "rolebindings", "clusterroles", "clusterrolebindings"] # Allow Defenders to list RBAC resources
    verbs: ["list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: twistlock-view-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: twistlock-view
subjects:
  - apiGroup:
    kind: ServiceAccount
    name: twistlock-service
    namespace: twistlock
---

---
apiVersion: v1
kind: Secret
metadata:
  name: twistlock-secrets
  namespace: twistlock
type: Opaque
data:
  service-parameter: OWZvMHlEVmFrU3BYWmREYllaaGl6NEVTZ3l0Sy95M2tVbzlmTXNhN1F6UXluQ2FWT3hVKzhCekpNTnY1VU9sSkJGYnhDTW54NFpwOVhja2cxWjZ6Q2c9PQ==
  defender-ca.pem: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURIVENDQWdXZ0F3SUJBZ0lSQU9oQUVQSndtUjNRdXp6SFZvQ1VzUUF3RFFZSktvWklodmNOQVFFTEJRQXcKS0RFU01CQUdBMVVFQ2hNSlZIZHBjM1JzYjJOck1SSXdFQVlEVlFRREV3bFVkMmx6ZEd4dlkyc3dIaGNOTWpJdwpNakkzTURneE16QXdXaGNOTWpVd01qSTJNRGd4TXpBd1dqQW9NUkl3RUFZRFZRUUtFd2xVZDJsemRHeHZZMnN4CkVqQVFCZ05WQkFNVENWUjNhWE4wYkc5amF6Q0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0MKZ2dFQkFLOVloSkFVdThQTHgvS0o4ZWNoTHByT29JbU1BWEtrUUNZdWJrSGtCSC94VUVrcUtBZ0VxVzhGZ0ZnTApzM0c3QVU5WXVDc3RZS1NlOWNUNEhCSElxSk1hb0RBUzVlcWxGTEFxa0pPZE8wenBJSHpDM293bjIwWEF5c0pJCm5Lb3F1K1AvRUx5QTJlZjc3bUM0K0Y0dkl1Q0pXMnVnS0dwbFdnOSt5d0x0bW1RTU9rclV4akZwbENFOU1jUk4KajRJWUI1cDJjQitjUllTSGZ6V1h6VG5yY2VNZjZhcFphSHpqZkNMUXVza0x2eHp0VWNHZGY0NHV4eTZEbEtQZQo5T3pvb01xMk5sMUVxazV6RUVldlg1M2pkQTN2eFY1MHZmbkdvdEpTMUFXVTNMam5vSWxZdEtIdWRXYnh3TjJzCjB0WkgzeGtGaW1Bc05ZYS85L1o4OGJlV0ZwTUNBd0VBQWFOQ01FQXdEZ1lEVlIwUEFRSC9CQVFEQWdLc01BOEcKQTFVZEV3RUIvd1FGTUFNQkFmOHdIUVlEVlIwT0JCWUVGSThzWnd0bmhkK3dSUjRjWWczUEJGTXRxc2VyTUEwRwpDU3FHU0liM0RRRUJDd1VBQTRJQkFRQmVmMy9mYStrek9jRHVUSUVHcmFRTEowWjBrNHN1NVZoaFRXRTE5R0JyCnMvQWUrdE1xeFVRZ0JIVDdYbG8vYi9Ld3g5MUk1cUFOQ1VxcTJuY0ZyWHQxdnM4dEVHTEUvVE1QZXlsRDBNT1MKb1htL21mdTNuTjRjWVdxQ1ZYaWV0STlqdld6ZFZ5bXVUM3hOVXV4QlVIRVVaNDdrOHhBamR6WFpvZlJDY09VRwpRK2dSMEMyYnY2cGNyV3BYQ21jRzJaT3F6bFFoKzIxeGs2bWxDZFRpbERJbWhOQUNnMXgxN3FIL0RxeHIvOVZDCm9aWmk0OXQvVHFBWWE2ZXlTWEZBZ2xnUUFETTZEcFdFdSszL0crWHcvdlBycXloZzZQYmNYeVVUUzM3YU5sMGYKS0ozRjJMaTU0R3FmeW9WeWZFeUdlcXU5M041aHZrSGgzZmgrRnFUZHpodmsKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  defender-client-cert.pem: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURPekNDQWlPZ0F3SUJBZ0lRTnh2bmQ0RHlKbXpoV0JUQzdQam9PVEFOQmdrcWhraUc5dzBCQVFzRkFEQW8KTVJJd0VBWURWUVFLRXdsVWQybHpkR3h2WTJzeEVqQVFCZ05WQkFNVENWUjNhWE4wYkc5amF6QWVGdzB5TkRBeQpNalV5TWpRMU1EQmFGdzB5TnpBeU1qUXlNalExTURCYU1DZ3hFakFRQmdOVkJBb1RDVlIzYVhOMGJHOWphekVTCk1CQUdBMVVFQXhNSmJHOWpZV3hvYjNOME1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0MKQVFFQWs0ckRlbXFudWJQbmwzaE9nK1lkdDNEaVA1djJLM3RvbExHLy9IZ2hoSmI3Z2ttVUdtUHhvS3ZVZ3VIWQpzUmZxckMrQ0hrNmJhTHZ0Mm9EcDhvRmwyMVpFa1NMMzZxWlpQUlgrSGFhY09ySlVHY2IrbjZMc2tRVGYvNS85CmFOb3c1VGNETTYrYnhTa3dEUWhsTnhXbWpPMTdxVktQV1l1Y3F5VFR0RXUreGVQRGQ3T3Y5MFQzUFN2YTZkRVoKV1hkYXBDS08xTHVqN3M4a0NrVXRONURTQ0NxUW9sT1hpUmZvUlFkVzA0N3MrREo1V09wWTl0VFlQUFFyV0phZwpCVnRFcmVQTnB6SFd0cHd0NGg3b1pvRWF5Tk1IMnZKMGVuWVNXTFNwNWNTbE13ckJvV0VhUnBTc3NkQmtYdVlYCkV4YVd0Tk1BRFc5elBMSUNMUlNra1JreTJ3SURBUUFCbzJFd1h6QU9CZ05WSFE4QkFmOEVCQU1DQjRBd0V3WUQKVlIwbEJBd3dDZ1lJS3dZQkJRVUhBd0l3REFZRFZSMFRBUUgvQkFJd0FEQWZCZ05WSFNNRUdEQVdnQlNQTEdjTApaNFhmc0VVZUhHSU56d1JUTGFySHF6QUpCZ1VxQkFFQ0J3UUFNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUFmCkVLeW9kNU9UdkpoNExVYlkraHZNL2tOOXhsOWw1dEJ3dlVrSW9tMUI2dEhQS2pMYXN0Sk1aYjRLaExRb0NqazkKckI2Q0tWM1NNeUpCU3p2Z1JtZk9za0FwR0dnWnJlRzRDR3JMVm8zMEZLOGVDTGcvY1Fyc0pVVXJqVFkzemx4UQpObm8zbnFVOHhjVXNjNEF5SWl5aTJDYnkyeFhCVHZtTnhkVFVweVF0ZTdVdGM1bmIyT2UyenlTS0NtVUpta3ByClRmVVpQU2FVYzAvbDdXdXpValhwRHRWNVRrcUs2b0RQYjYwUXUxdlNoQ3M0OXNGaS9nT1FnVi9tYXl6ODFGa04KS0dreXBiOTlqQ0ZrcHB3aHlqUEVxcFIvQ3R0ZUpPMm04QUE3cGZxZEt2cDA2Mk82M3B5c2dKamowaCttZ0JocwpnazdoNXBIU01ReGRuWVhzTTZYMAotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  defender-client-key.pem: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpQcm9jLVR5cGU6IDQsRU5DUllQVEVECkRFSy1JbmZvOiBBRVMtMjU2LUNCQywyZjBlZTk1YjEyNDBkM2U2NjJhZWIzMWM4YTYyZjJlYQoKSldKdmJUb3I1dzdFQ1BVa2FVYWpkY2J3UUFPZW9MOFg0SkFBVXpQZXRZdmxGRmorOFQxZ1g1RVN6akxZVlJlaQpUSHh5VllMWXdtZGF6cDNINFNzbnJIMDc1cFBvaEp0Vkllbk9vYkE1c0cxVTliS09Wa1BZUmh5a3NQV3cvY0pVClB5RGJTZFJSMzJPWnh2RFF5NEx5UVIwbHFRTVhBS3RORWhYZGIzQnVSckVONGd5VFJYQWQzOVdqY2lpM09YWkQKdTlTU1lSaDJnMHBaNWxOdnNlM2lPSHBwNW1yRmhpdDcrM1dKV1hESlIwbDk2clFqMEQraVhWY0d3d1I0eEd5cQpHU0M4TnJZMjJMalhBVllLSUdRdHM2Z2ZNMDNOVFlXcmtZMUJuTmZjblFsRFNabTNpanhyQWFoMWovTi9pb3JHCkVkYWc5MWJPSmtoVXVCNjF0Rk1SYUx4bGlwUmtCY21iWVQwQXE1OVVMWjdHQXhZSUhTQ3M0aTZ6MkhHOG4xR1AKTEpITzY1T2JBMkpkUWNrc2ZjTk9qK0RYbHRRRWtHK2Y4c2w2RjFROGxFVHlpdnFGZ3FNbDQ1d01NWUNQQXNUeApveGlZY2VyMHdzUlkrc3pBRDVUejU2SElrdVE3YlFlSmVBZHYrbjJOZFdBSitONWFPSU9ST3pvdUozbHpkRUVaCmc0amdCOTJNOUJrTzJlOXhwb3phZWJld2pHaDBzREdEaXhPSU1EaUg3dWdyNjRRdFVzUmpPRThXc296bHpiQnAKYXp2V1NaTUpxd01uZlhCei9jVDVuZ3p5ZUk3SnBJRExmUHlObHJ2ZkhhS0U1UFdYR3M3Y1pqenlweGhabmE3SApRMTNxOEdzYkF4Ukd6N3M0YnFSZlpReGVOUlNoVzdGSFRKZjhyMHRMSXVZWlhvZURTWUpic0lmMlczK1g1WHQzClM5NkxIakVIR0djRjF0VWpyM3c0ZXM3VWdjRjJGUFNqZDc3dmUxTTFPMVM4OS9LQ1hTeDR0RndNSFBKNFNFOEUKSWJTSFZuNmxTcW1pYWlJcG4vMWtrL0puWGNudGg0MXVseW1ELzc0dDZMblg4dUdaLzNTSkJnUEhhSFJ1azdETApsbUtxN280RzJQbzBzV0tpbnFmaWI0QXF4eFhFNUF4ZEJLenBTbGQwVDJjZUJ5TFF4QTdiSlQ1YTZCUWJoRGxWCkQra0dtczAwNXQrbGJLaGEvQlYvMmR4THVSTU1IdmNLRzZqZ1BGN2RjY09vVFRFNmVWMVFheUQxbSsyRmtzRmgKL01NSVFCNXlQUEZ2U3Zjb25HT0JZN054QUdRWDRGUlplcmptV3RjbVkxOTc4Y0UySGpMOWUvQjdhKzNYSVA3VApBUU9nNW8vbStBcG94M3VXMURxK2p6TUJjSGZRbDAwOEFUMkNEaE9hRGIrT3pmSndtc0VHTFpWNUhqWXdmdlFGCkRSMkZqZEFiNUJyYkRDVnBmZDJDaFNUZGtsbDZ0Wlk5YlBBbkZvSUlTZ0lOcEJXazdvSHA4YmxnbDNZcFR6OEkKTG9wNkZMczc5a055WnVCVFVndjgwaXZFTzBMWUR4RVhOUWJGdGhpNU9uQVJnTFJvT1o1Q1NvNHVURVEyTUl2SApQT0U4citzUzl5QWZETG5qSXZYVFkrOElxZ0NZNG5oTFRpVDMyM1hHZzA3bTR4NVVUOVRXekdkQW5lekxmUTVrCldpN2YwRS9zRnVTZFhvUm5MWGhrQnhoSm9yU2FTV1RHNitaYkhFZTVSYittcmQ2UmdyaFlQaU9Rbm54TGRyVWoKb0RSVzFGOFN1WlBBdFVxNktxSXladmZzTG13Qk5GRlcreEFFaHpTR1hpSGI4eUNGQUNkNlpBeUJFL0Y2aFAzSwpXTzh1N0ZrR253ZWFkMlZPendEcUFoNVI2ZnpLZ0hLQXE4R0w4aE5XQVg4MWo5cFhrRVFXWVpPZVdDUWJ5bTFhCmJ6QkN0a2N3RElUVFBSOWhZQUhpbUZveVRnSUJVV2tNRmFhbVlnTjVnOHVYWnFHSk9RcFBQdW1jbG5wOVlibmIKdDJTcDNiSUVZemRDZmhsRjBHbDkxK29BWWNVQWdaKzBacGdqYXhTL1k0WnVHY0duZTFMSmU3TDljNURXN2V5UgotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
  admission-cert.pem: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTekNDQWpPZ0F3SUJBZ0lRWmc0Q1Z1bVEwZmlrdHgrcHM3d0dPekFOQmdrcWhraUc5dzBCQVFzRkFEQW8KTVJJd0VBWURWUVFLRXdsVWQybHpkR3h2WTJzeEVqQVFCZ05WQkFNVENWUjNhWE4wYkc5amF6QWVGdzB5TkRBeQpNalV5TXpFek1EQmFGdzB5TnpBeU1qUXlNekV6TURCYU1CUXhFakFRQmdOVkJBb1RDVlIzYVhOMGJHOWphekNDCkFTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTU01ZFFoVFlxcGZWK0IxS2NRT1Z0ZDkKVy9Sc21ZWTZNL0hQMnBiRU45eEI4dlBvSlBycGsrbTR0MWlLSmxENk0xSHF1RzAwdTF6cldBendKaTVxU0lrdApYK24wY0Z2eTkrZ3g3aUV1Z2toLy9ndkVEZTNTcDh4NlhXN1hBWmlURVNERUNPSFBXTGZlb0N3SmVxV2ZjblkrClNpdmxiSDNyUXp5aDZHeGN5M0xrTzVWaGRqMWhoYzZzVVNjaVF2OE53bDI3OEcwY3p2M3NUTUlzeFFacks5TU4KQm5oSTRCa2pOQUdzT0tOVzRITGpvM3VPalMweXFDZ3F4OWhtaGZGSUErdGFrUU9FeVVSdEdHTkttTmhCZkU4agpKQktnN0owbkpKZG1raUtYZitQRWw0VGdhVjRoS1NLdnk3NUNCcGJGcmlxdWpuRnoxTEhxQXcycnZJRXdrZkVDCkF3RUFBYU9CaERDQmdUQU9CZ05WSFE4QkFmOEVCQU1DQTZnd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSEF3SUcKQ0NzR0FRVUZCd01CTUF3R0ExVWRFd0VCL3dRQ01BQXdId1lEVlIwakJCZ3dGb0FVanl4bkMyZUYzN0JGSGh4aQpEYzhFVXkycXg2c3dJUVlEVlIwUkJCb3dHSUlXWkdWbVpXNWtaWEl1ZEhkcGMzUnNiMk5yTG5OMll6QU5CZ2txCmhraUc5dzBCQVFzRkFBT0NBUUVBZFZCcE1GZ2M3ZnBuVlg1Z3FMYVBtZVZOTFpMTm9ZTE5jckp2ci9wSGgzcjUKa0ZQUXdrRDREMkQ0dVBnRDJVVU55ckN5cmpSTUIrUlhPV2FYYlIyc2dGc2xCVHhTNWc1YlZyWWwxU08vdjhNNwpFSmJOd1hwZ2pESTlxYnptelR4K0haTDNYaWgwVVV4U3VpWE4rOW1MMEhqK0xiTVJvMTJDY1o1c08xbVZ3empUCkd0RGdVK2tXM3hXTDhrdEJSRHNub0UvRXBZbFZ5MWVLZWpSTUdKZUJSajRLWVFsNjNiQjFEM1dqcFpYRjUraXEKQjdMTU9sQS8yeG1pVFd5NzJHWXhtOCtUZU4xWnpsdlNDOUJhUW1oV0V1MTl4cmppTkpJTXgwMXZyaXBLOHkzRAp6aUc1OFloNGNiUGxjK251Y0FMRkRHUENEZUpvYm5obHdGSlRiaFBUb1E9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  admission-key.pem: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpQcm9jLVR5cGU6IDQsRU5DUllQVEVECkRFSy1JbmZvOiBBRVMtMjU2LUNCQyw2M2EzZWYxMGM0ZTU1ZTNkNjM3NzFjOGY2ZThiODczMAoKUktEeWpJV2p3TUx3ZVBBUzM3OEFaZDFadUNYVndZL3grbFpJcGw3NlgwVm1maXBoZVdJMnJlRUhOSWQ2SDdTYgowUUx1a2xjVWFDY2FzZDJVTTU0OGptMzI0NnlMNXpFR0JodTRTVlpHajhiMGpyR0FpOHZqTUoyZnJySWp5Z3BwCjRJbmJob1Q2ZkVRODNQZ0grZStRTWVoS21BUzFmM2E1enZHUHdQQmdPNldLVWNjakFmVHIvaUN0R1lyUUpvL0QKdWZIVVJ3dWVnTVNJUHNjUDlXRFAzeExPdU1BQys1ZGlTb29aYVNsUWxDUnM2eFp6amNKOUFVZDhXcWZtSURXaAozTytmKzhiQ2tCV2lFZmVteU1JZmVpLzRnTE92UmMwa2NnMjBac2MwR3E1eWpOWVE5RHpoODlSMWovaGlVaC9pCkh4NHowKzZEakZ1dTNTVVR3Nk44M0Z3OVZqbndGYnJYY3FPWEZjWllZL0UrSlhxRkxYZk8yd1UxNEd2UCsvRnoKbE1PSG5EcUZkS1BxVmFBZ3NMaGtoOC9Deldnaythc1E2aWRDVlhTUUhSOXhFVlhEWUFHbDlvd1k5R1NLTVZMcgoxYVd4MmNXaHNSVlczNG9UM01RZ2VvWWpSYno0TDBwQkdqV2luUERha3FiT3dXckY5SVNNNEgyZGhwbHZNejlvCm9lS1JHZUVkdGdDU3dxWVp1Wk9XSVNyZjBwZ3BNcEhMdTk1b3NXUno3K0dCVXpyODF2VlV2Ukk1TXNEZVJqUG4Kejlpb0xKVUY0eGN2OGJJUU5JVXlVM0c3NU01NHczZ21wQnpOS1pLdVJxZ25nVXdiWjBtMUJzM3E3TTRxV3ViVwpNaUdnM2dPN3d6QlJwN25HWlBSeHB1eGZMSS9EbXFWdEJYaEkrblN6S3pDQzdERnRiQVMvMmpNZTNLcUJybFY4ClhiMWJxRVhqbjZOWkZrUzE1N3R0OVEzV3U5N0ljcmJ5ZlFLcUxmamluOHlIMCsvUEVPRDhGU2RPSHp5M0w4b2QKdlYvcFhwdmR0ck5iM1IyUHdxTlo0KzRyMkRzRFZQaEtCYVZLcEhZOXd2LzZaZTRMS3NEK01GeTc3TUlHQk1SUwpYWk8vZ3BVY0IzZHVkdzZhRWhCckF2cE4xckNsZW41U3YvZUVPWldSM3dRMGZnMHVXd2FTMU9nZ0x5ejYvR0I1CmYrQlhKaVhPaHdkTTZkMy9WTzlRc0hiRUZUaGRqcmExTU5rb3N2b3pTMjAyNFpHTmtzdExYelBvNlltMmFxTHgKTWRGcGcxbE05WkF0SmlNVG94RTAwSVFXVVpHd0F2YmtXZWFwQ3lSYXYySkZNNC80TmE5NUVJNTdJcTQwUDM4bgp5MnRlTURGTDhMay93TWl0a3VKNWhYNVRPRlI3WVNPU0J6M2JhTzhORkpjL0dlNG9GaUpKdDJ2MG1HeEQ2V0N1CnRPcllNeEJnb2hCUFFNbm9INEpZWmdZZGcyMTl5U3U1MFFmL2Jyd3ZYNExRditiVFJwSXRNM3lTdHlJczJWM0gKOFo2VE5DK1M5NjFFZlVVeHBTOSszN2RwUEdOVGI4VENwbStHbC9WU3B4cDZqUnIrYlpudlRFeldLUHpIWFZmSgpwbUxrUWJ0N2d1STZyS1FJZW15YStMaDNqUVVmMTB0ZE9PbG9HMlRDSnExeUFIRDY4STA5dmhMYVpseC96ZE4vCmhhZlBnOXRGOGRndXRCK2Vod3VsVFdtOHIrK0VxVkVRV2F6QjFhSmx3bGRsMDhBZ2tXSVV6eUhad3RweHhjNjgKTzRiMVMwbUIxU0l4TU5jdXlXbVU2YVk2SytiSSsrbmd2Zm1WNjNXRlBMTHNBdFNpL2ttUGxyTUdYUElMeTloQQp6SHQrVXlzQkZWcVQxSzE0dzhiZGVrZ0g4a3Rod0o0MUNDVnljRnIyd01SNSsySlhWSldxZlQxM2VlQ2txdXpXCnJRR0lOWUFHbUtYRDNYWGsrSHhNbHllV3ZOUGVUeHpNTloySkg0S2xleDM2V3JxMk9aYmdvVkIzN0ZMejdxTGsKT1R5U1pNQ2krUTM1MzliMVBTQzd1RWxjMHdreVgvTXA2RlFCZ3E1eVR3bVJaTnlMajNibVdpWXBvTDgvb1owaAotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=

---
apiVersion: v1
kind: ServiceAccount # Service Account is used for managing security context constraints policies in Openshift (SCC)
metadata:
  name: twistlock-service
  namespace: twistlock
secrets:
  - name: twistlock-secrets
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: twistlock-defender-ds
  namespace: twistlock
spec:
  selector:
    matchLabels:
      app: twistlock-defender
  template:
    metadata:
      annotations:
        container.apparmor.security.beta.kubernetes.io/twistlock-defender: unconfined
      labels:
        app: twistlock-defender
    spec:
      serviceAccountName: twistlock-service
      restartPolicy: Always
      containers:
        - name: twistlock-defender
          image: registry-auth.twistlock.com/tw_9yc0di0pe7pc5ruq2yibvvjxrqy5znjl/twistlock/defender:defender_32_01_128
          volumeMounts:
            - name: data-folder
              mountPath: "/var/lib/twistlock"
            - name: certificates # Setting the certificates mount after data-folder since it is nested and was overridden in CRI based GKE cluster
              mountPath: "/var/lib/twistlock/certificates"
            - name: docker-sock-folder
              mountPath: "/var/run"
            - name: passwd
              mountPath: "/etc/passwd"
              readOnly: true
            - name: syslog-socket
              mountPath: "/dev/log"
            - name: cri-data
              mountPath: /var/lib/containerd
            - name: runc-proxy-sock-folder
              mountPath: "/run"
          env:
            - name: WS_ADDRESS
              value: wss://us-east1.cloud.twistlock.com:443
            - name: DEFENDER_TYPE
              value: cri
            - name: LOG_PROD
              value: "true"
            - name: SYSTEMD_ENABLED
              value: "false"
            - name: DOCKER_CLIENT_ADDRESS
              value: "/var/run/docker.sock"
            - name: DEFENDER_CLUSTER_ID
              value: "a2c19c7f-ec86-f6db-0562-279d060312e4"
            - name: DEFENDER_CLUSTER
              value: "DOCKER-LOCAL-BAS"
            - name: MONITOR_SERVICE_ACCOUNTS
              value: "true"
            - name: MONITOR_ISTIO
              value: "false"
            - name: COLLECT_POD_LABELS
              value: "false"
            - name: INSTALL_BUNDLE
              value: "eyJzZWNyZXRzIjp7fSwiZ2xvYmFsUHJveHlPcHQiOnsiaHR0cFByb3h5IjoiIiwibm9Qcm94eSI6IiIsImNhIjoiIiwidXNlciI6IiIsInBhc3N3b3JkIjp7ImVuY3J5cHRlZCI6IiJ9fSwiY3VzdG9tZXJJRCI6InVzLTItMTU4Mjg2NTUzIiwiYXBpS2V5Ijoib2hvWXV6MUNMZi9scUhlME1qWEE1bjhlUm9uYWVaUkoxNU04K3VmTzFPNWN0UlpaRHFkWFVjSUk2cmZhQUJ1dmwwbGJDL010VU9lNEdaYmlTVEorVlE9PSIsIm1pY3Jvc2VnQ29tcGF0aWJsZSI6ZmFsc2V9"
            - name: HOST_CUSTOM_COMPLIANCE_ENABLED
              value: "true"
            - name: CLOUD_HOSTNAME_ENABLED
              value: "false"
            - name: FIPS_ENABLED
              value: "false"
          securityContext:
            readOnlyRootFilesystem: true
            privileged: false
            capabilities:
              add:
                - NET_ADMIN # Required for process monitoring
                - NET_RAW # Required for iptables (CNNF, runtime DNS, WAAS). See: https://bugzilla.redhat.com/show_bug.cgi?id=1895032
                - SYS_ADMIN # Required for filesystem monitoring
                - SYS_PTRACE # Required for local audit monitoring
                - SYS_CHROOT # Required for changing mount namespace using setns
                - MKNOD # A capability to create special files using mknod(2), used by docker-less registry scanning
                - SETFCAP # A capability to set file capabilities, used by docker-less registry scanning
                - IPC_LOCK # Required for perf events monitoring, allowing to ignore memory lock limits
          resources: # See: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/#how-pods-with-resource-requests-are-scheduled
            limits:
              memory: "512Mi"
              cpu: "900m"
            requests:
              cpu: "256m"
      volumes:
        - name: certificates
          secret:
            secretName: twistlock-secrets
            defaultMode: 256
        - name: syslog-socket
          hostPath:
            path: "/dev/log"
        - name: data-folder
          hostPath:
            path: "/var/lib/twistlock"
        - name: passwd
          hostPath:
            path: "/etc/passwd"
        - name: docker-sock-folder
          hostPath:
            path: "/var/run"
        - name: cri-data
          hostPath:
            path: /var/lib/containerd
        - name: runc-proxy-sock-folder
          hostPath:
            path: "/run"
      hostPID: true
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
---
apiVersion: v1
kind: Service # Expose the Defender as admission controller. Remark: by default, Defender will not listen on the service port
metadata:
  name: defender
  namespace: twistlock
  labels:
    app: twistlock-defender
spec:
  ports:
    - port: 443
      targetPort: 9998
  selector:
    app: twistlock-defender
